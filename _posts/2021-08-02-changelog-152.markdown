---
layout: post
title: "IntelliJ Rust Changelog #152"
date: 2021-07-22 17:00:00 +0300
---


## New Features

* Introduce new intention actions:

  * [#7480] `Implement Trait` to implement a trait for a `struct` or `enum` (by [@Kobzol])

    {% include gif-img.html path="/assets/posts/changelog-152/implement-trait" w="600px" %}

    This intention action simplifies writing of trait impls. It automatically fills in `struct`/`enum`
    generics, generates implementations of trait members and allows you to replace trait generics.

  * [#6838] `Convert function to closure` to convert a local named function to closure (by [@nschoellhorn])

    {% include gif-img.html path="/assets/posts/changelog-152/convert-function-to-closure" w="600px" %}

  * [#6813] `Convert closure to function` to convert a lambda expression to a local named function (by [@nschoellhorn])

    {% include gif-img.html path="/assets/posts/changelog-152/convert-closure-to-function" w="600px" %}

  * [#6414] `Replace successive '_' with '..'` to replace redundant wildcards with a single `..` (by [@zeroeightysix])

    {% include gif-img.html path="/assets/posts/changelog-152/replace-wildcards" w="600px" %}

  * [#7559] `Simplify dependency specification` to ...TODO inline tables in `Cargo.toml` dependencies

    {% include gif-img.html path="/assets/posts/changelog-152/simplify-dependency-specification" w="600px" %}

* Completion improvements:

  * [#7487], [#7551], [#7536] Add completion for lambdas in expression positions that expect a function (by [@Kobzol])

    {% include gif-img.html path="/assets/posts/changelog-152/lambda-completion" w="600px" %}

  * [#7481] Add completion for `pub(crate)` and `pub()` visibility modifers (by [@Kobzol])

  * [#6410] Add completion for layouts in `#[repr()]` attributes (by [@zeroeightysix])

  * [#7534], [#7571] Improve completion of items inside impl trait (by [@Kobzol])

    {% include gif-img.html path="/assets/posts/changelog-152/completion-member" w="600px" %}

* [#7532] Add quick fix to implement missing supertrait(s) for a trait impl block (by [@Kobzol])

  {% include gif-img.html path="/assets/posts/changelog-152/implement-supertraits" w="600px" %}

* [#7492] Add a quick fix to remove an unused import (by [@Kobzol])

* [#7479] TY&RES: support const arguments that looks like type arguments

* [#7519] Add postfix template named `.wrap` that wraps an existing type with another type (by [@Kobzol])

* [#7499] added a new filter to the Structure View panel, which toggles whether macro-generated items
  should be included in the Structure View (by [@afetisov])

* [#7495] The import optimizer will now remove unused imports (by [@Kobzol])

* [#7321] `show macro expansion` actions and intentions now show a reason of the expansion failure

* [#7308] Provide an experimental feature to add `--nocapture` flag to `cargo test` command

* [#7228] Make links that look like Rust identifiers or paths (e.g., A, A::B, A::B::C) work correctly in
  quick documentation by prepending `psi_element://` to them. It fixes #7209
  Now clickable links inside stdlib docs should work properly (by [@shocoman])

* [#6003] Allow inlining functions (using `Inline Function` refactoring) with diverging exit points
  (like `panic!()`) (by [@SaarYogev])

* [#7563] Add option to enable unused import inspection in doctests

## Performance Improvements

* [#7576] Slightly optimize `Find usage` for private items inside files with child modules

## Fixes

* [#7521], [#7503] TODO-rename Support type aliases for all types (by [@Kobzol])

* [#7120] Take into account `pub(crate)` visibility in auto-import

* [#6060] Check if the `asm!()` macro is contained in an unsafe block or function (by [@Stzx])

* `Unused import` inspection improvements:

  * [#7574] Take into account usages in custom derive proc macros in `unused import` inspection

  * [#7555] Fix false-positives related to unresolved method calls in `unused import` inspection

  * [#7552] Move `Unused import` inspection into `Rust/Lints` inspection group in settings

  * [#7538] INSP: Disable `unused import` inspection in doctests

  * [#7535] Support method calls using type qualifier in unused import inspection

  * [#7496] Fix handling conditionally disabled (with `#[cfg()]` attributes) code in `unused import` inspection

* [#7567] Render const generics in `Parameter Info` (<kbd>Ctrl</kbd> + <kbd>P</kbd>)

* [#7564] Ignore conditionally disabled (with `#[cfg()]` attributes) imports when removing unused imports

* [#7553] Up/Down mover: add a trailing comma even when there are multiple elements in the last line (by [@t-kameyama])

* [#6904] Up/Down mover: move vec macro arguments (by [@t-kameyama])

* [#7547] Don't offer live templates (like `p` that inserts `println!()`) in patterns

* [#7546] INSP: add comma to match arm if needed in "Lift return out" (by [@t-kameyama])

* [#7540] Filter out existing features in dependency features completion

* [#7527] Enable [Go to generated declaration] line marker in WASM projects for 2021.2 platform

* [#7516] COMP: fix autoimport-aware completion after completion at empty place

* [#7428] Show crate roots first in the project view

* [#7411] Take into account the `CARGO_HOME` environment variable when using crates local index

* [#7383] Fix intention to convert an `impl trait` parameter to a generic parameter when the corresponding
  function already has const parameters (by [@Kobzol])

* [#7334] Do not warn about missing format macro arguments if [`format_args_capture`] unstable feature is
  enabled (by [@Kobzol])

* [#7168] Fix false-positive [E0603](https://doc.rust-lang.org/error-index.html#E0603) "Module is private" when
  using new name resolution engine

## Internal Improvements

* [#7512] Introduce new `RsTemplateBuilder` API

* [#7321] Improve macro expansion error types & error handling

* [#7452] Use the new `FormattingService` on `2021.2` IDEs

Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/60?closed=1)

[@Kobzol]: https://github.com/Kobzol
[@SaarYogev]: https://github.com/SaarYogev
[@Stzx]: https://github.com/Stzx
[@afetisov]: https://github.com/afetisov
[@nschoellhorn]: https://github.com/nschoellhorn
[@shocoman]: https://github.com/shocoman
[@t-kameyama]: https://github.com/t-kameyama
[@zeroeightysix]: https://github.com/zeroeightysix

[#6003]: https://github.com/intellij-rust/intellij-rust/pull/6003
[#6060]: https://github.com/intellij-rust/intellij-rust/pull/6060
[#6410]: https://github.com/intellij-rust/intellij-rust/pull/6410
[#6414]: https://github.com/intellij-rust/intellij-rust/pull/6414
[#6813]: https://github.com/intellij-rust/intellij-rust/pull/6813
[#6838]: https://github.com/intellij-rust/intellij-rust/pull/6838
[#6904]: https://github.com/intellij-rust/intellij-rust/pull/6904
[#7120]: https://github.com/intellij-rust/intellij-rust/pull/7120
[#7168]: https://github.com/intellij-rust/intellij-rust/pull/7168
[#7228]: https://github.com/intellij-rust/intellij-rust/pull/7228
[#7308]: https://github.com/intellij-rust/intellij-rust/pull/7308
[#7321]: https://github.com/intellij-rust/intellij-rust/pull/7321
[#7334]: https://github.com/intellij-rust/intellij-rust/pull/7334
[#7383]: https://github.com/intellij-rust/intellij-rust/pull/7383
[#7411]: https://github.com/intellij-rust/intellij-rust/pull/7411
[#7428]: https://github.com/intellij-rust/intellij-rust/pull/7428
[#7452]: https://github.com/intellij-rust/intellij-rust/pull/7452
[#7479]: https://github.com/intellij-rust/intellij-rust/pull/7479
[#7480]: https://github.com/intellij-rust/intellij-rust/pull/7480
[#7481]: https://github.com/intellij-rust/intellij-rust/pull/7481
[#7482]: https://github.com/intellij-rust/intellij-rust/pull/7482
[#7487]: https://github.com/intellij-rust/intellij-rust/pull/7487
[#7492]: https://github.com/intellij-rust/intellij-rust/pull/7492
[#7495]: https://github.com/intellij-rust/intellij-rust/pull/7495
[#7496]: https://github.com/intellij-rust/intellij-rust/pull/7496
[#7499]: https://github.com/intellij-rust/intellij-rust/pull/7499
[#7503]: https://github.com/intellij-rust/intellij-rust/pull/7503
[#7512]: https://github.com/intellij-rust/intellij-rust/pull/7512
[#7516]: https://github.com/intellij-rust/intellij-rust/pull/7516
[#7519]: https://github.com/intellij-rust/intellij-rust/pull/7519
[#7521]: https://github.com/intellij-rust/intellij-rust/pull/7521
[#7527]: https://github.com/intellij-rust/intellij-rust/pull/7527
[#7532]: https://github.com/intellij-rust/intellij-rust/pull/7532
[#7534]: https://github.com/intellij-rust/intellij-rust/pull/7534
[#7535]: https://github.com/intellij-rust/intellij-rust/pull/7535
[#7536]: https://github.com/intellij-rust/intellij-rust/pull/7536
[#7538]: https://github.com/intellij-rust/intellij-rust/pull/7538
[#7540]: https://github.com/intellij-rust/intellij-rust/pull/7540
[#7546]: https://github.com/intellij-rust/intellij-rust/pull/7546
[#7547]: https://github.com/intellij-rust/intellij-rust/pull/7547
[#7551]: https://github.com/intellij-rust/intellij-rust/pull/7551
[#7552]: https://github.com/intellij-rust/intellij-rust/pull/7552
[#7553]: https://github.com/intellij-rust/intellij-rust/pull/7553
[#7555]: https://github.com/intellij-rust/intellij-rust/pull/7555
[#7559]: https://github.com/intellij-rust/intellij-rust/pull/7559
[#7563]: https://github.com/intellij-rust/intellij-rust/pull/7563
[#7564]: https://github.com/intellij-rust/intellij-rust/pull/7564
[#7567]: https://github.com/intellij-rust/intellij-rust/pull/7567
[#7571]: https://github.com/intellij-rust/intellij-rust/pull/7571
[#7574]: https://github.com/intellij-rust/intellij-rust/pull/7574
[#7576]: https://github.com/intellij-rust/intellij-rust/pull/7576

[Go to generated declaration]: https://plugins.jetbrains.com/plugin/8182-rust/docs/wasm-projects-support.html#goto-wasm-bindgen
[`format_args_capture`]: https://github.com/rust-lang/rust/issues/67984
